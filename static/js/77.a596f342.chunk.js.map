{"version":3,"file":"static/js/77.a596f342.chunk.js","mappings":"yRAmCA,EA5Be,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MAQnB,OAAO,SAAC,IAAD,CAAQC,GAAG,OAAX,UACL,SAAC,EAAAC,EAAD,CAAOC,EAAE,QAAQC,MAAM,UACrBC,YAAY,wBACZC,aAAc,CAAEC,QAAS,GAAKH,MAAO,WACrCI,SAAU,CAACC,KAAK,KAAMC,GAAI,MAC1BC,gBAAgB,UAChBC,YAAY,UACZC,KAAK,OACLC,KAAK,QACLC,SAfoB,SAAAC,GACpBA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,OAAOC,OACzBtB,GAASuB,EAAAA,EAAAA,GAAaN,EAAMI,OAAOC,MAAME,eAC5C,KAcA,E,oBC5BYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,E,2DCa1BC,EAAgB,CACpBpB,KAAM,GACNqB,OAAQ,IAGJC,EAASC,EAAAA,KAAaC,MAAM,CAChCxB,KAAMuB,EAAAA,KAAaE,WACnBJ,OAAQE,EAAAA,KAAaE,aAiGvB,EA9FoB,WAClB,IAAMxC,GAAWC,EAAAA,EAAAA,MACX0B,GAAWc,EAAAA,EAAAA,IAAYhB,GAU7B,OACI,SAAC,IAAD,CAAMiB,UAAU,SACZC,MAAM,SACNvC,EAAG,IAAKwC,EAAG,IAAKC,EAAG,EACnB3C,GAAI,CAACQ,KAAK,OAAQC,GAAI,KACtBmC,OAAQ,EACRjC,YAAY,UACZD,gBAAgB,UAChBmC,YAAY,QACZC,aAAc,GARlB,UAUI,SAAC,KAAD,CACAb,cAAeA,EACfc,iBAAkBZ,EAClBa,SAvBa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1BzB,EAASG,QAAO,SAAAuB,GAAO,OAAIA,EAAQtC,OAASoC,EAAOpC,IAA5B,IAAkCuC,OAAS,EACpEC,MAAM,GAAD,OAAIJ,EAAOpC,KAAX,8BAGLf,GAASwD,EAAAA,EAAAA,IAAWL,IACpBC,IACH,EAaO,SAKK,SAACK,GAAD,OACG,UAAC,KAAD,YACI,SAAC,KAAD,CAAO3C,KAAK,OAAOC,KAAK,OAAOyB,UAAQ,EAAvC,SACK,gBAAGkB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,UAAC,KAAD,CAAazD,GAAI,EAAGE,EAAE,QAAQwD,UAAWD,EAAKE,OAAO9C,KAArD,WACI,SAAC,EAAAZ,GAAD,kBAAWuD,GAAX,IAAkBI,aAAa,MAC3BvD,aAAc,CAAEC,QAAS,GAAKH,MAAO,WACrCA,MAAM,UACNO,gBAAgB,UAChBC,YAAY,UACZP,YAAY,OACZyD,QAAQ,6HAEZ,UAAC,KAAD,CAAKnB,EAAG,GAAIxC,EAAG,IAAf,UAC0B,KAArBuD,EAAKR,OAAOpC,MACb,SAAC,KAAD,CAAgBN,SAAU,EAAGJ,MAAM,UAAnC,oJAGqB,MACrB,SAAC,KAAD,CAAkBI,SAAU,EAAGJ,MAAM,MAArC,mCAhBX,KAuBL,SAAC,KAAD,CAAOS,KAAK,MAAMC,KAAK,SAASyB,UAAQ,EAAxC,SACK,gBAAGkB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,UAAC,KAAD,CAAazD,GAAI,EAAG0D,UAAWD,EAAKE,OAAO9C,KAA3C,WACI,SAAC,EAAAZ,GAAD,kBAAWuD,GAAX,IAAkBI,aAAa,MAC3BvD,aAAc,CAAEC,QAAS,GAAKH,MAAO,WACrCA,MAAM,UACNO,gBAAgB,UAChBC,YAAY,UACZmD,UAAU,MAAM1D,YAAY,SAC5ByD,QAAQ,6FAEZ,UAAC,KAAD,CAAKnB,EAAG,GAAIxC,EAAG,IAAf,UAC4B,KAAvBuD,EAAKR,OAAOf,QACb,SAAC,KAAD,CAAgB3B,SAAU,EAAGJ,MAAM,UAAnC,0GAEqB,MACrB,SAAC,KAAD,CAAkBI,SAAU,EAAGJ,MAAM,MAArC,qCAfX,KAoBL,SAAC,IAAD,CAAQwC,EAAG,EAAGzC,EAAG,IACb6D,QAAQ,QACRC,WAAW,OACXC,YAAY,OACZC,WAAW,OACXtD,KAAK,SAASC,KAAK,cALvB,2BA/CP,KA4Dd,E,UC9DD,EAvCoB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,KAAMqB,EAAiB,EAAjBA,OAAQiC,EAAS,EAATA,GAC7BrE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAAC,IAAD,WACH,SAAC,KAAD,CAAKG,EAAE,QAAP,UACC,UAAC,IAAD,YACI,UAAC,IAAD,YACH,SAAC,KAAD,CAAKA,EAAE,QAAQF,GAAG,OAAlB,UACC,UAAC,IAAD,CAAMO,SAAS,OAAO6D,WAAW,OAAjC,UAAyCvD,EAAzC,WAED,SAAC,KAAD,CAAKX,EAAE,QAAP,UACC,SAAC,IAAD,CAAMK,SAAS,OAAO6D,WAAW,OAAjC,SAAyClC,UAGvC,SAAC,IAAD,CAAQS,EAAG,EAAGzC,EAAG,IACf6D,QAAQ,QACRC,WAAW,OACXC,YAAY,OACZC,WAAW,OACXtD,KAAK,SAASC,KAAK,iBACnBwD,QApBS,kBAAMvE,GAASwE,EAAAA,EAAAA,IAAcH,GAA7B,EAcX,4BAcP,E,2KChCG,GAAsCI,EAAAA,EAAAA,GAAc,CACtD1D,KAAM,oBACN2D,aAAc,oGAFhB,eAAKC,EAAL,KAAyBC,EAAzB,KAIIC,GAAOC,EAAAA,EAAAA,IAAW,SAAerB,EAAOsB,GAC1C,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQxB,GAC3C,GAMIyB,EAAAA,EAAAA,IAAiBzB,GALnB0B,EADF,EACEA,SADF,IAEEC,UAAAA,OAFF,MAEc,OAFd,EAGEC,EAHF,EAGEA,cACAC,EAJF,EAIEA,QACGC,GALL,YAOMC,GAAgBC,EAAAA,EAAAA,GAAiBN,GAEjCO,EAAeJ,GAAU,UADd,kCAC4B,CAAEK,GAAIL,IAAc,CAAC,EAClE,OAAuBM,EAAAA,EAAAA,KAAIjB,EAAoB,CAAErD,MAAO0D,EAAQG,UAA0BS,EAAAA,EAAAA,KACxFC,EAAAA,EAAAA,IAD2F,QAAC,QAG1Fd,IAAAA,EACAe,cAAeV,EACfW,kBAAmBV,EACnBW,KAAM,OACNC,OAAO,kBAAKjB,EAAOkB,WAAcR,IAC9BH,GARsF,IASzFJ,SAAUK,MAGf,IACDX,EAAKsB,YAAc,QACDrB,EAAAA,EAAAA,IAAW,SAACrB,EAAOsB,GACXtB,EAAhB2C,GAAR,IAAeb,GAAf,OAAwB9B,EAAxB,GACA,OAAuBmC,EAAAA,EAAAA,KAAIf,GAAD,QAASE,IAAAA,EAAKqB,GAAI,KAAMhB,UAAW,UAAWiB,YAAa,OAAUd,GAChG,IACWY,YAAc,eACNrB,EAAAA,EAAAA,IAAW,SAAwBrB,EAAOsB,GACpCtB,EAAhB2C,GAAR,IAAeb,GAAf,OAAwB9B,EAAxB,GACA,OAAuBmC,EAAAA,EAAAA,KAAIf,GAAD,QAASE,IAAAA,EAAKqB,GAAI,KAAMhB,UAAW,UAAWiB,YAAa,OAAUd,GAChG,IACaY,YAAc,gBAC5B,IAAIG,GAAWxB,EAAAA,EAAAA,IAAW,SAAmBrB,EAAOsB,GAClD,IAAMC,EAASJ,IACf,OAAuBgB,EAAAA,EAAAA,KAAIC,EAAAA,EAAAA,IAAD,QAAC,QAAad,IAAAA,GAAQtB,GAAtB,IAA6BwC,MAAOjB,EAAOuB,OACtE,IACDD,EAASH,YAAc,YACRrB,EAAAA,EAAAA,IAAW,SAAmBrB,EAAOsB,GAClD,IAAMC,EAASJ,IACf,OAAuBgB,EAAAA,EAAAA,KAAIY,EAAAA,GAAD,QAAC,QAAQzB,IAAAA,EAAKiB,KAAM,gBAAmBvC,GAAvC,IAA8CwC,MAAOjB,EAAOyB,OACvF,IACQN,YAAc,WCrDvB,IAqBA,EArBoB,WAClB,IAAMxE,GAAWc,EAAAA,EAAAA,IAAYhB,GACvBK,GAASW,EAAAA,EAAAA,IAAYZ,GACrB6E,EAAmB/E,EAASG,QAAO,SAAAuB,GAAO,OAC9CA,EAAQtC,KAAKS,cAAcmF,SAAS7E,EAAON,cADG,IAIhD,OACE,SAACqD,EAAD,CAAM+B,UAAU,OAAOvG,MAAM,UAAUI,SAAU,CAAEC,KAAM,KAAMC,GAAI,MAAnE,SACC+F,EAAiBG,KAAI,gBAAGxC,EAAH,EAAGA,GAAItD,EAAP,EAAOA,KAAMqB,EAAb,EAAaA,OAAb,OACpB,SAACkE,EAAD,CACEQ,aAAa,kBACbC,aAAa,OACbC,WAAW,SAHb,UAII,SAAC,EAAD,CAAajG,KAAMA,EAAMqB,OAAQA,EAAQiC,GAAIA,KAJlCA,EADK,KAUzB,ECwCD,EAjDiB,WACf,IAAMrE,GAAWC,EAAAA,EAAAA,MACX0B,GAAWc,EAAAA,EAAAA,IAAYhB,GACvBO,GAAYS,EAAAA,EAAAA,IAAYV,GACxBG,GAAQO,EAAAA,EAAAA,IAAYR,GAM1B,OAJAgF,EAAAA,EAAAA,YAAU,WACRjH,GAASkH,EAAAA,EAAAA,MACV,GAAE,CAAClH,KAGF,UAAC,IAAD,YACE,UAAC,KAAD,CAAKI,EAAE,QAAQ+G,GAAG,OAAOC,GAAG,OAAOlH,GAAG,OAAtC,WACF,SAAC,IAAD,CAAQyF,GAAG,OAAOzF,GAAG,OAArB,UACI,SAAC,IAAD,CAASkG,GAAG,KAAKT,GAAI,GAAIzF,GAAI,GAC3B0G,UAAU,MACVnG,SAAS,KACT2D,WAAW,SACXiD,UAAU,SAASC,UAAW,EAJhC,+BAQA,SAAC,EAAD,QAEF,UAAC,KAAD,CAAKlH,EAAE,QAAQ+G,GAAG,OAAOC,GAAG,OAC1BzE,MAAM,UACN/B,gBAAgB,UAChBC,YAAY,UACZiC,OAAO,YACPiE,aAAa,KACb/D,aAAa,OACbH,EAAE,OAPJ,WAQF,SAAC,IAAD,CAAQ3C,GAAG,OAAX,UACC,SAAC,IAAD,CAASkG,GAAG,KAAKmB,KAAK,KAAtB,yBAID,SAAC,EAAD,IACCvF,IAAcE,IAAQ,SAAC,IAAD,WAAQ,SAAC,IAAD,CAAS7B,MAAM,cACzCsB,EAAS2B,OAAS,IACjB,+BACE,SAAC,EAAD,WAMX,C,yKCjDG,GAAgDmB,EAAAA,EAAAA,GAAc,CAChE1D,KAAM,yBACN2D,aAAc,8GAFhB,eAAK8C,EAAL,KAA8BC,EAA9B,KAIIC,GAAmB5C,EAAAA,EAAAA,IACrB,SAACrB,EAAOsB,GACN,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,YAAaxB,GAC1CkE,GAAWzC,EAAAA,EAAAA,IAAiBzB,GAC5BC,GAAQkE,EAAAA,EAAAA,MACd,OAAe,MAATlE,OAAgB,EAASA,EAAME,YAEdgC,EAAAA,EAAAA,KAAI4B,EAAyB,CAAElG,MAAO0D,EAAQG,UAA0BS,EAAAA,EAAAA,KAC7FC,EAAAA,EAAAA,KADgG,QAAC,UAGnF,MAATnC,OAAgB,EAASA,EAAMmE,qBAAqBF,EAAU5C,IAH6B,IAI9F+C,WAAWC,EAAAA,EAAAA,IAAG,6BAA8BtE,EAAMqE,WAClD7B,OAAO,QACLhC,QAAS,OACT+C,WAAY,UACThC,EAAOgD,WATP,IAaV,IAEHN,EAAiBvB,YAAc,oBACXrB,EAAAA,EAAAA,IAAW,SAACrB,EAAOsB,GACrC,IAAMC,EAASyC,IACT/D,GAAQkE,EAAAA,EAAAA,MACd,KAAe,MAATlE,OAAgB,EAASA,EAAME,WACnC,OAAO,KACT,IAAMqE,GAAaF,EAAAA,EAAAA,IAAG,0BAA2BtE,EAAMqE,WACvD,OAAuBlC,EAAAA,EAAAA,KACrBY,EAAAA,GADwB,QAAC,QAGvBzB,IAAAA,EACA,eAAe,GACZtB,GALmB,IAMtBwC,MAAOjB,EAAOyB,KACdqB,UAAWG,EACX9C,UAA0BS,EAAAA,EAAAA,KACxB,OACA,CACEsC,KAAM,eACNC,EAAG,8VAKZ,IACahC,YAAc,e","sources":["components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","../node_modules/@chakra-ui/layout/dist/chunk-Z47J5YMH.mjs","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-WFX3T3Z6.mjs"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filtersSlice';\n\nimport { Input, Center } from '@chakra-ui/react';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onInputChange = event => {\n    event.preventDefault();\n    console.log(event.target.value);\n    dispatch(changeFilter(event.target.value.toLowerCase()));;\n};\n\nreturn <Center mb=\"15px\">\n  <Input w='380px' color='#2D3748'\n    placeholder='Find contacts by name'\n    _placeholder={{ opacity: 0.4, color: '#2D3748' }}\n    fontSize={{base:'xs', md: 'sm'}}\n    backgroundColor='#EDF2F7'\n    borderColor='#2D3748'\n    type='text'\n    name='value'\n    onChange={onInputChange}\n  />\n</Center>\n};\n\nFilter.propTypes = {\n    handleChange: PropTypes.func,\n    QueryInputId: PropTypes.func,\n};\n  \nexport default Filter;","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport {\n    FormControl,\n    Input,\n    Button,\n    FormErrorMessage,\n    FormHelperText,\n    Flex,\n    Box\n} from '@chakra-ui/react';\n\nconst initialValues = {\n  name: '',\n  number: ''\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleSubmit = (values, { resetForm }) => {\n    if (contacts.filter(contact => contact.name === values.name).length > 0) {\n      alert(`${values.name}  is already in contacts`);\n      return;\n    }\n      dispatch(addContact(values));\n      resetForm();\n  };\n\n  return (\n      <Flex direction='column'\n          align='center'\n          w={380} h={240} p={3}\n          mb={{base:'15px', md: '0'}}\n          border={2}\n          borderColor='#2D3748'\n          backgroundColor='#9fa2a6'\n          borderStyle='solid'\n          borderRadius={10}\n      >\n          <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n          >\n              {(props) => (\n                  <Form >\n                      <Field type='text' name='name' required>\n                          {({ field, form }) => (\n                              <FormControl mb={1} w='355px' isInvalid={form.errors.name}>\n                                  <Input {...field} autoComplete='off'\n                                      _placeholder={{ opacity: 0.4, color: '#2D3748' }}\n                                      color='#2D3748'\n                                      backgroundColor='#EDF2F7'\n                                      borderColor='#2D3748'\n                                      placeholder='Name'\n                                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                                  />\n                                  <Box h={34} w={255}>\n                                      {form.values.name !== '' ? (\n                                      <FormHelperText fontSize={7} color='#FFFFF0'>\n                                          Name may contain only letters, apostrophe, dash and spaces.\n                                          For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\n                                      </FormHelperText>) : null}\n                                      <FormErrorMessage fontSize={7} color='red'>\n                                          Name is required\n                                      </FormErrorMessage>\n                                  </Box>\n                              </FormControl>\n                          )}\n                      </Field>\n                      <Field type='tel' name='number' required>\n                          {({ field, form }) => (\n                              <FormControl mb={1} isInvalid={form.errors.name}>\n                                  <Input {...field} autoComplete='off'\n                                      _placeholder={{ opacity: 0.4, color: '#2D3748' }}\n                                      color='#2D3748'\n                                      backgroundColor='#EDF2F7'\n                                      borderColor='#2D3748'\n                                      inputMode='tel' placeholder='Number'\n                                      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                                  />\n                                  <Box h={34} w={255}>\n                                      {form.values.number !== '' ? (\n                                      <FormHelperText fontSize={7} color='#FFFFF0'>\n                                          Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\n                                      </FormHelperText>) : null}\n                                      <FormErrorMessage fontSize={7} color='red'>Number is required</FormErrorMessage>\n                                  </Box>\n                              </FormControl>\n                          )}\n                      </Field>\n                      <Button p={1} w={120}\n                          display=\"block\"\n                          marginLeft='auto'\n                          marginRight='auto'\n                          fontWeight='bold'\n                          type='submit' name='Add contact'>\n                          Add contact\n                      </Button>\n                  </Form>\n              )}\n          </Formik>\n      </Flex>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nexport default ContactForm ;","import ProtoTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  ChakraProvider,\n  Box,\n  Flex,\n  Text,\n  Button\n} from '@chakra-ui/react';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => dispatch(deleteContact(id));\n  return (\n    <>\n      <ChakraProvider>\n\t\t\t<Box w='600px'>\n\t\t\t\t<Flex>\n        <Flex>\n\t\t\t\t\t<Box w='300px' mb='15px'>\n\t\t\t\t\t\t<Text fontSize='16px' paddingTop='10px'>{name}: </Text>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box w='150px'>\n\t\t\t\t\t\t<Text fontSize='16px' paddingTop='10px'>{number}</Text>\n\t\t\t\t\t</Box>\n        </Flex>\n        <Button p={1} w={120}\n          display=\"block\"\n          marginLeft='auto'\n          marginRight='auto'\n          fontWeight='bold'\n          type='submit' name='Delete contact'\n          onClick={onDelete}>\n          Delete\n        </Button>\n      </Flex>\n\t\t\t</Box>\n    </ChakraProvider>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: ProtoTypes.string.isRequired,\n  number: ProtoTypes.string.isRequired,\n  id: ProtoTypes.string.isRequired,\n  onDelete: ProtoTypes.func,\n};\n\nexport default ContactItem;","// src/list.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [ListStylesProvider, useListStyles] = createContext({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = forwardRef(function List2(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props);\n  const validChildren = getValidChildren(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {};\n  return /* @__PURE__ */ jsx(ListStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.ul,\n    {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: { ...styles.container, ...spacingStyle },\n      ...rest,\n      children: validChildren\n    }\n  ) });\n});\nList.displayName = \"List\";\nvar OrderedList = forwardRef((props, ref) => {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ol\", styleType: \"decimal\", marginStart: \"1em\", ...rest });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = forwardRef(function UnorderedList2(props, ref) {\n  const { as, ...rest } = props;\n  return /* @__PURE__ */ jsx(List, { ref, as: \"ul\", styleType: \"initial\", marginStart: \"1em\", ...rest });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = forwardRef(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(chakra.li, { ref, ...props, __css: styles.item });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = forwardRef(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */ jsx(Icon, { ref, role: \"presentation\", ...props, __css: styles.icon });\n});\nListIcon.displayName = \"ListIcon\";\n\nexport {\n  useListStyles,\n  List,\n  OrderedList,\n  UnorderedList,\n  ListItem,\n  ListIcon\n};\n","import { useSelector } from 'react-redux';\n\nimport ContactItem from '../ContactItem';\n\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { List, ListItem } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List marginTop='60px' color='#1A202C' fontSize={{ base: 'xs', md: 'sm' }}>\n    {filteredContacts.map(({ id, name, number }) => (\n      <ListItem key={id}\n        borderBottom='1px solid black'\n        marginBottom='10px'\n        alignItems='center'>\n          <ContactItem name={name} number={number} id={id} />\n      </ListItem>\n    ))}\n    </List>\n  )\n};\n\nexport default ContactList;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as React from 'react';\nimport { ChakraProvider, Box, Center, Heading, Spinner } from '@chakra-ui/react';\n\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ChakraProvider>\n      <Box w=\"380px\" mr=\"auto\" ml=\"auto\" mb=\"40px\">\n\t\t\t\t<Center mt='30px' mb=\"15px\">\n        <Heading as='h2' mt={20} mb={30}\n          marginTop='0px'\n          fontSize='32'\n          fontWeight='medium'\n          textAlign='center' noOfLines={1}>\n          Your phonebook\n        </Heading>\n\t\t\t\t</Center>\n        <ContactForm />\n      </Box>\n      <Box w=\"610px\" mr=\"auto\" ml=\"auto\"\n        align='stretch'\n        backgroundColor='#9fa2a6'\n        borderColor='#2D3748'\n        border='2px solid'\n        marginBottom='12'\n        borderRadius='10px'\n        p='10px'>\n\t\t\t\t<Center mb=\"15px\">\n\t\t\t\t\t<Heading as='h6' size='md'>\n\t\t\t\t\t\tContacts\n\t\t\t\t\t</Heading>\n\t\t\t\t</Center>\n\t\t\t\t<Filter />\n\t\t\t\t{isLoading && !error &&<Center><Spinner color='red.500' /></Center>}\n        {contacts.length > 0 && (\n          <>\n            <ContactList />\n          </>\n        )} \n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default Contacts;","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-error.tsx\nimport { Icon } from \"@chakra-ui/icon\";\nimport { createContext } from \"@chakra-ui/react-context\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nvar FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!(field == null ? void 0 : field.isInvalid))\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nvar FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!(field == null ? void 0 : field.isInvalid))\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport {\n  useFormErrorStyles,\n  FormErrorMessage,\n  FormErrorIcon\n};\n"],"names":["dispatch","useDispatch","mb","I","w","color","placeholder","_placeholder","opacity","fontSize","base","md","backgroundColor","borderColor","type","name","onChange","event","preventDefault","console","log","target","value","changeFilter","toLowerCase","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","initialValues","number","schema","yup","shape","required","useSelector","direction","align","h","p","border","borderStyle","borderRadius","validationSchema","onSubmit","values","resetForm","contact","length","alert","addContact","props","field","form","isInvalid","errors","autoComplete","pattern","inputMode","display","marginLeft","marginRight","fontWeight","id","paddingTop","onClick","deleteContact","createContext","errorMessage","ListStylesProvider","useListStyles","List","forwardRef","ref","styles","useMultiStyleConfig","omitThemingProps","children","styleType","stylePosition","spacing","rest","validChildren","getValidChildren","spacingStyle","mt","jsx","chakra","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","ListItem","item","Icon","icon","filteredContacts","includes","marginTop","map","borderBottom","marginBottom","alignItems","useEffect","fetchContacts","mr","ml","textAlign","noOfLines","size","FormErrorStylesProvider","useFormErrorStyles","FormErrorMessage","ownProps","useFormControlContext","getErrorMessageProps","className","cx","text","_className","fill","d"],"sourceRoot":""}